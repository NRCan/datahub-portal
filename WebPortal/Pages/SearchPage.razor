@inject IApiService ApiService
@inject NavigationManager NavigationManager
@inject IFGPSearchService FgpSearchService

@page "/search/"
@page "/search/{searchtext}"
@using NRCan.Datahub.Shared.Data.FGP

<div class="header-wrapper">
    <h2 class="nrcan-typography h2">@Localizer["File Results"]</h2>
</div>

<FileGrid SearchText=@searchtext CurrentFolder="ApiService.SearchDataFolder" CanAddData="false"/>

<hr/>
<div class="header-wrapper">
    <h2 class="nrcan-typography h2">@Localizer["FGP Results"]</h2>
</div>
@if (SearchingFGP)
{
    <Spinner />
}
else if (FgpResult.Count > 0)
{
    <table class="search-list-container full-width-search-list">
        <thead>
            <tr>
                <th class="search-table-header">@Localizer["Title"]</th>
                <th class="search-table-header">@Localizer["Organization"]</th>
                <th class="search-table-header">@Localizer["Created"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in FgpResult.Items)
            {
                <tr class="search-table-row">
                    <td>
                        <a href=@(item.GetGeoCaUrl())>@item.Title</a>
                    </td>
                    <td>@item.Organisation</td>
                    <td>@item.Created</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>@Localizer["No results found"]</h4>
}

@code
{
    [Parameter]
    public string searchtext { get; set; }

    private GeoCoreSearchResult FgpResult { get; set; }

    private bool SearchingFGP { get; set; } = false;
  
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (string.IsNullOrWhiteSpace(searchtext))
        {
            NavigationManager.NavigateTo("data");
        }
        else
        {
            SearchingFGP = true;
            FgpResult = await FgpSearchService.SearchFGPByKeyword(searchtext);
            SearchingFGP = false;
        }
    }
}
